name: Workflow for World App
on:
  push:

jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          java-version: '19'
          distribution: 'adopt'
      - name: Unit Tests
        run: mvn -Dtest=com.napier.sem.AppTest test

  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          java-version: '19'
          distribution: 'adopt'
      - name: Integration Tests
        run: |
          docker build -t database ./db
          docker run --name world -dp 33060:3306 database
          mvn -Dtest=com.napier.sem.AppIntegrationTest test
          docker stop world
          docker rm world
          docker image rm database    
      - name: CodeCov
        uses: codecov/codecov-action@v2
        with:
          # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./target/site/jacoco
          flags: Integration Tests # optional
          verbose: true # optional (default = false)

  build:
    name: Build Run in Docker and Deploy Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          java-version: '19'
          distribution: 'adopt'
      - name: Package and Run docker compose
        run: |
          mvn package -DskipTests
          docker-compose up --abort-on-container-exit
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "latest"
          files: |
            ./target/*.jar
      - name: Copy Output
        run: docker container cp group-3_app_1:./tmp/reports ./
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: reports # The branch the action should deploy to.
          folder: reports # The folder we are copying

      - name: Bug Report
        description: File a bug report
        title: "[Bug]: "
        labels: [ "bug", "triage" ]
        assignees:

        body:
          - type: markdown
            attributes:
              value: |
                Thanks for taking the time to fill out this bug report!
          - type: input
            id: contact
            attributes:
              label: Contact Details
              description: How can we get in touch with you if we need more info?
              placeholder: ex. email@example.com
            validations:
              required: false
          - type: textarea
            id: what-happened
            attributes:
              label: What happened?
              description: Also tell us, what did you expect to happen?
              placeholder: Tell us what you see!
              value: "A bug happened!"
            validations:
              required: true
          - type: dropdown
            id: version
            attributes:
              label: Version
              description: What version of our software are you running?
              options:
                - 1.0.2 (Default)
                - 1.0.3 (Edge)
            validations:
              required: true
          - type: dropdown
            id: browsers
            attributes:
              label: What browsers are you seeing the problem on?
              multiple: true
              options:
                - Firefox
                - Chrome
                - Safari
                - Microsoft Edge
          - type: textarea
            id: logs
            attributes:
              label: Relevant log output
              description: Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.
              render: shell
          - type: checkboxes
            id: terms
            attributes:
              label: Code of Conduct
              description: By submitting this issue, you agree to follow our [Code of Conduct](https://example.com)
              options:
                - label: I agree to follow this project's Code of Conduct
                  required: true